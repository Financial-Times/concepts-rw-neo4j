version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/concepts-rw-neo4j
    docker:
      - image: circleci/golang:1.10
        environment:
          GOPATH: /go
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
          CIRCLE_ARTIFACTS: /tmp/artifacts
      - image: neo4j:3.2.2-enterprise
        environment:
          NEO4J_AUTH: none
          NEO4J_HEAP_MEMORY: 256
          NEO4J_CACHE_MEMORY: 256M
    steps:
      - checkout
      - run:
          name: Make go get work
          command: sudo chown -R circleci:circleci /go/src
      - run:
          name: Create test folder
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: External Dependancies
          command: |
            go get -u github.com/kardianos/govendor
            go get -u github.com/jstemmer/go-junit-report
            go get -u github.com/mattn/goveralls
            go get -u github.com/haya14busa/goverage
      - run:
          name: Govendor Sync
          command: govendor sync -v
      - run:
          name: Govendor build
          command: govendor build -v
      - run:
          name: Run Tests
          command: |
            govendor test -race -v -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out +local | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
            sed -i "/_mock/d" ${CIRCLE_COVERAGE_REPORT}/coverage.out
      - run:
          name: Upload Coverage
          command: /go/bin/goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-results
  docker_build:
    working_directory: /concepts-rw-neo4j
    docker:
      - image: docker:1.12.6-git
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .

workflows:
  version: 2
  tests_and_docker:
    jobs:
      - build
      - docker_build