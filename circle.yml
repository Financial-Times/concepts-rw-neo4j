machine:
  services:
    - docker
  environment:
    NEO4J_TEST_URL: http://localhost:7474/db/data/
    GOPATH: "${HOME}/.go_workspace:/usr/local/go_workspace:${HOME}/.go_project"
    GO_PROJECT_PATH: "${HOME}/.go_project/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"

checkout:
  post:
    - mkdir -p $(dirname ${GO_PROJECT_PATH})
    - ln -fs $HOME/$CIRCLE_PROJECT_REPONAME $GO_PROJECT_PATH

dependencies:
  pre:
    - go get github.com/axw/gocov/gocov; go get github.com/matm/gocov-html; go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/kardianos/govendor
  override:
    - cd $GO_PROJECT_PATH && govendor sync
    - cd $GO_PROJECT_PATH && go build -v

test:
  pre:
    - docker info; docker run -d -e "NEO4J_AUTH=none" -e "NEO4J_HEAP_MEMORY=256" -e "NEO4J_CACHE_MEMORY=256M" -p 7474:7474 -p 7473:7473 neo4j:$NEO4J_VERSION
    - wget --retry-connrefused --no-check-certificate -T 60 $NEO4J_TEST_URL; curl $NEO4J_TEST_URL
    - go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/mattn/goveralls
  override:
    - mkdir -p $CIRCLE_TEST_REPORTS/golang
    - cd $GO_PROJECT_PATH && govendor test -race -v +local | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
    - cd $GO_PROJECT_PATH && govendor list +local | awk -F/ '{ print $4}' | tr " " "\n" | xargs -I {} govendor test -v -cover -race -coverprofile=$CIRCLE_ARTIFACTS/{}.out ./{}
    - cd $CIRCLE_ARTIFACTS && sed -i '1d' *.out
    - |
      echo "mode: atomic" > $CIRCLE_ARTIFACTS/overall-coverage.result
    - cd $CIRCLE_ARTIFACTS && cat *.out >> overall-coverage.result
  post:
    - goveralls -coverprofile=$CIRCLE_ARTIFACTS/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
